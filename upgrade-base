#!/bin/sh

readonly MAKE=${MAKE:-make}
readonly PSVN=${PSVN:-svn}
readonly SRCDIR=${SRCDIR:-/usr/src}
readonly XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-${HOME}/.config}"
readonly CONF_FILE="${XDG_CONFIG_HOME}/upgrade-base"

ask_yesno() {
	while true; do
		echo -n "${1} (y/n)? [y] "
		
		read answer
		[ -n "${answer}" ] || answer="y"

		case ${answer} in
		[Nn])
			return 1 ;;
		[Yy])
			return 0
		esac
	done
}

display_usage() {
	echo "Usage: upgrade-base [-c|-h|-s]"
	echo ""
	echo "    -c - do not clean tree before build (NO_CLEAN=yes)"
	echo "    -h - show this help"
	echo "    -s - reset status and begin from start"
	echo ""
	exit
}

# $1 make target
# $2 state status afterwards
exec_cmd() {
	${1}
	if [ ${?} -ne 0 ]; then
		echo "===> '${1}' failed"
		exit 1
	fi
	save_state "${2}"
}

last_updating_entry() {
	if [ -f "${SRCDIR}/UPDATING" ]; then
		egrep -m 1 '^[0-9]{8}\:' ${SRCDIR}/UPDATING | sed 's|:||'
	else
		echo "0"
	fi
}

main_loop() {
	state="$(cat ${CONF_FILE} 2>/dev/null)"

	case ${state} in
	"")
		l_entry=$(last_updating_entry)
		${PSVN} update
		if [ ${?} -ne 0 ]; then
			echo "===> Updating of source tree failed"
			exit 1
		fi

		n_entry=$(last_updating_entry)
		if [ ${n_entry} -gt ${l_entry} ]; then
			echo "New entries since last upgrade in ${SRCDIR}/UPDATING file:"
			echo ""

			awk -v entry="${l_entry}" '
			BEGIN { new_entry=0; }
	
			/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]:/ {
				curr_entry=$0;
				sub(":", "", curr_entry);
				if (entry == curr_entry)
					exit;
				else
					new_entry=1;
			}

			{
				if (new_entry == 1)
					print $0;
			}' ${SRCDIR}/UPDATING

			ask_yesno "Continue with upgrade"
			if [ ${?} -ne 0 ]; then 
				save_state "REPO_UPDATED"
				exit
			fi
		fi

		save_state "REPO_UPDATED" ;;
	"REPO_UPDATED")
		exec_cmd "${MAKE} buildworld ${make_args}" "WORLD_BUILT" ;;
	"WORLD_BUILT")
		exec_cmd "${MAKE} buildkernel ${make_args}" "KERNEL_BUILT" ;;
	"KERNEL_BUILT")
		exec_cmd "${MAKE} installkernel ${make_args}" "KERNEL_INSTALLED"
		echo ""
		echo "===> You need to restart computer now."
		echo ""
		exit 0 ;;
	"KERNEL_INSTALLED")
		exec_cmd "mergemaster -p" "MERGEMASTER_INIT"  ;;
	"MERGEMASTER_INIT")
		exec_cmd "${MAKE} installworld ${make_args}" "WORLD_INSTALLED" ;;
	"WORLD_INSTALLED")
		exec_cmd "mergemaster -Fui" "MERGEMASTER_DONE" ;;
	"MERGEMASTER_DONE")
		if ask_yesno "Delete old files from system"; then
			yes | ${MAKE} delete-old
			yes | ${MAKE} delete-old-libs
		fi
		save_state ""

		echo ""
		echo "===> You need to restart computer again."
		echo ""

		exit 0 ;;
	*)
		echo "===> Garbage in ${CONF_FILE}, try upgrade-base -s"
		exit 1
	esac
	main_loop	
}

# $1 state
save_state() {
	[ -d ${XDG_CONFIG_HOME} ] || mkdir ${XDG_CONFIG_HOME}
	echo "${1}" > ${CONF_FILE}
}

while getopts "chs" option; do
	case ${option} in
	c)
		make_args="NO_CLEAN=yes" ;;
	s)
		echo > ${CONF_FILE} ;;
	*)
		display_usage
	esac
done

cd ${SRCDIR}
main_loop
