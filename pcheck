#!/bin/sh

TMPDIR=${TMPDIR:-/tmp}
aspell_check="aspell --dont-backup --lang=en check"

reinplace_file() {
	local file=$1 expr=$2
	
	[ -n "$expr" ] || return
	sed "$expr" $file > $file.new
	mv $file.new $file
}

[ -z "$(make -V PKGNAME 2>/dev/null)" ] && \
	echo "===> This is not port directory" && exit 0

rej_files=$(find . -name "*.rej")
if [ -n "$rej_files" ]; then
	printf "===> Found rejected patch files, bailing\n "
	echo $rej_files | sed 's|./||g'
	exit 0
fi

find . \( -name "*.orig" -or -size 0 \) -delete

if [ -n "$(whereis -bq aspell)" ]; then
	$aspell_check pkg-descr
	[ -f pkg-message ] && $aspell_check pkg-message
	[ -f files/pkg-message.in ] && $aspell_check files/pkg-message.in
else
	echo "===> Aspell not found, skipping spellcheck"
fi

find . \( -type f -and ! -path './work/*' \) | while read file; do
	[ -z "$(tail -n 1 $file | tr '\n' '%' | grep '%$')" ] && \
		echo >> $file && mod_files="$mod_files ${file##./}"
done
[ -n "$mod_files" ] && \
	printf "===> Added final newlines to file(s):\n %s\n" "$mod_files"

comment=$(make -V COMMENT)
if [ -n "$(echo $comment | grep -E '^(A|An) ')" ]; then
	new_comment=$(echo $comment | awk '{ 
		gsub("^(A|An) ", "", $0); 
		print toupper( substr($0, 1, 1) ) substr($0, 2); }')
	sed_expr="s|^COMMENT=.*|COMMENT=	$new_comment|"
	echo "===> Removed leading article from COMMENT"
fi
if [ -n "$(make -V MAKE_JOBS_SAFE)" ]; then
	sed_expr="$sed_expr /^MAKE_JOBS_SAFE=/d;"
	echo "===> Removed no-op MAKE_JOBS_SAFE=yes"
fi
reinplace_file Makefile "$sed_expr"

sed_expr=""
if [ -n "$(grep '^Author:' pkg-descr)" ]; then
	sed_expr="/^Author:/d;"
	echo "===> Deleting Author: line from pkg-descr"
fi
if [ -n "$(grep '^WWW:	' pkg-descr)" ]; then
	sed_expr="$sed_expr s|^WWW:	|WWW: |g;"
	echo "===> Fixing tab after WWW: in pkg-descr"
fi
reinplace_file pkg-descr "$sed_expr"

if [ -n "$(whereis -bq portlint)" ]; then
	portlint -abt
else
	echo "===> Portlint not found, skipping port checks"
fi
