#!/bin/sh

readonly TBDIR="${TBDIR:-/usr/local/tinderbox}"
readonly UID="$(id -u)"

display_usage() {
	<< EOF cat
Usage: tbopt <del|set|show> <portname> <buildname>
       tbopt list <buildname>

 command: del  - remove set options
          list - list ports with changed options
          set  - set options
          show - show current options state

 portname: category/port or '.' to build port from current directory

 buildname: tinderbox build name or 'all' for all available builds

EOF
	exit
}

tc_cmd() {
	local tc_script="./tc"
	[ ${UID} -eq 0 ] || tc_script="sudo ${tc_script}"
	cd ${TBDIR}/scripts && ${tc_script} ${*}
}

cmd="${1}"
if [ "${cmd}" = "list" ]; then
	[ ${#} -lt 2 ] && display_usage	
	builds="${2}"
else	
	[ ${#} -lt 3 ] && display_usage
	port="${2}"
	builds="${3}"
fi

[ "${cmd}" != "del" -a "${cmd}" != "set" -a "${cmd}" != "show" \
	-a "${cmd}" != "list" ] && display_usage

[ "${port}" = "." ] && \
	port="$(echo ${PWD} | awk '{ n = split($0, p ,"/"); print p[n-1] "/" p[n]; }')"

[ "${builds}" = "all" ] && builds="$(tc_cmd listBuilds)"

readonly OPTDIR="$(tc_cmd configOptions | awk -F= '/OPTIONS_DIR/ { print $2 }')"

for build in ${builds}; do
	ptree="${TBDIR}/portstrees/$(tc_cmd getPortsTreeForBuild -b ${build})/ports"
	
	if [ "${cmd}" != "list" -a ! -d "${ptree}/${port}" ]; then
		echo "${build}: ${ptree}/${port} does not exists"
		continue
	fi
	
	make_args="PORT_DBDIR=${TBDIR}/${OPTDIR}/${build}"

	case ${cmd} in
	del)
		cd "${ptree}/${port}" && make ${make_args} rmconfig ;;
	list)
		ch_ports="$(ls "${TBDIR}/${OPTDIR}/${build}" | awk '{
			sub("_", "/", $1);
			print $1;
		}')"
		if [ -n "${ch_ports}" ]; then
			echo "===> Build ${build}:"
			echo "${ch_ports}"
		fi
		;; 
	set)
		cd "${ptree}/${port}" && make ${make_args} config ;;
	show)
		echo "===> Build ${build}:"
		cd "${ptree}/${port}" && make ${make_args} pretty-print-config
	esac
done
