#!/bin/sh

PORTSDIR=${PORTSDIR:-/usr/ports}
[ -d "${PORTSDIR}" ] || \
	PORTSDIR="$(make -V PORTSDIR /usr/share/mk/bsd.ports.mk 2>/dev/null)"
if [ ! -d "${PORTSDIR}" ]; then
	echo "Ports directory not found: ${PORTSDIR}, try setting PORTSDIR variable"
	exit 1
fi

readonly PATH="${PATH}:${PORTSDIR}/Tools/scripts"
readonly build="${3:-none}"

poudriere_test_build() {
	local jname="${1}" port="${2%%:*}" option="${2##*:}"
	
# TODO: automatic setting of needed option
#	[ "${port}" = "$option" ] || tbopt set ${port} ${bname}
	sudo poudriere testport -s -j ${jname} -o ${port}
	if [ ${?} -ne 0 ]; then
		BUILD_RESULTS="${BUILD_RESULTS} ${port}:${jname}:failed"
	else
		BUILD_RESULTS="${BUILD_RESULTS} ${port}:${jname}:success"
	fi
}

display_usage() {
	echo "Usage: tbuilder <command> <query> [jail_name]"
	echo ""
	echo " command: bdeps - build ports having certain build dependency"
	echo "          file  - build ports read from file"   
	echo "          grep  - build ports containing phrase in Makefile"
	echo "          ldeps - build ports linking with certain library"
	echo "          match - build ports with name matching certain phrase"
	echo "          name  - build specific port"
	echo ""
	echo " query: (bdeps|match) - portname"
	echo "        (file) - name of file to read category/port entries from"
	echo "        (grep) - grep pattern"
	echo "        (ldeps) - category/port"
	echo "        (name) - category/port or '.' to build port from current directory"
	echo ""
	echo " jail_name: poudriere jail name or 'all' for all available jails"
	echo ""
	exit
}

[ -z "${2}" ] && display_usage

case ${1} in
bdeps)
	ports="$(portsearch -b ${2} | grep Path: | cut -f 4- -d '/')" ;;
file)
	if [ ! -f "${2}" ]; then
		echo "File ${2} does not exists"
		exit 1
	fi
	ports="$(cat "${2}")" ;;
grep)
	ports="$(cd ${PORTSDIR} && find . -name "Makefile*" -exec grep -q "${2}" {} \; \
		-print | grep -v "${2}/Makefile" | sed -E 's;(\./|/Makefile);;g')" ;;
ldeps)
	tmp="$(cd ${PORTSDIR} && find . -name "Makefile*" -exec grep -q "${2}" {} \; \
		-print | grep -v "${2}/Makefile" | sed -E 's;(\./|/Makefile);;g')"

	for path in ${tmp}; do
		cd ${PORTSDIR}/${path}
		if [ -n "$(make -V LIB_DEPENDS | grep ${2})" ]; then
			ports="${ports} ${path}"
			continue
		fi
		
		for option in $(make pretty-print-config); do
			[ -n "$(echo ${option} | grep ^-)" ] || continue
			[ -n "$(make -V LIB_DEPENDS WITH_${option#-}=yes | grep ${2})" ] || continue
			ports="${ports} ${path}:${option#-}"
			continue 2
		done
		
		ports="${ports} ${path}:OPT_UNKNOWN"
	done
	;;	
match)
	ports="$(portsearch -n ${2} | grep Path: | cut -f 4- -d '/')" ;;
name)
	ports="${2}"
	[ "${ports}" = "." ] && ports="$(echo ${PWD} | \
		awk '{ n = split($0, p ,"/"); print p[n-1] "/" p[n]; }')" ;;
*)
	display_usage
esac

for port in ${ports}; do
	case ${build} in
	none)
		if [ "${1}" != "name" ]; then
			case ${port##*:} in
			"${port}")
				echo "Found match: ${port%%:*}" ;;
			"OPT_UNKNOWN")
				echo "Found match: ${port%%:*}, unknown option needed" ;;
			*)
				echo "Found match: ${port%%:*}, needs ${port##*:}=on" ;;
			esac
		fi
		;;
	all)
		for b in $(poudriere jails -lq | cut -d" " -f1); do 
			poudriere_test_build ${b} ${port}
		done ;;
	*)
		poudriere_test_build ${build} ${port}
	esac
done

if [ -n "${BUILD_RESULTS}" ]; then
	printf "\n===> Following build(s) were performed:\n"
	printf "%-40s %-15s %s\n" "PORTNAME" "JAIL" "RESULT"

	for result in ${BUILD_RESULTS}; do
		printf "%-40s %-15s %s\n" "${result%%:*}" \
			"$(echo ${result} | awk -F: '{ print $2 }')" \
			"${result##*:}"
	done
	echo ""
fi

