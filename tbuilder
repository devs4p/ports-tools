#!/bin/sh

readonly PORTSDIR="$(make -V PORTSDIR /usr/share/mk/bsd.ports.mk 2>/dev/null)"
readonly PATH="${PATH}:${PORTSDIR}/Tools/scripts"
readonly POUDRIERE_DIR="${POUDRIERE_DIR:-/usr/local/poudriere}"
readonly POUDRIERE_PORTS="${POUDRIERE_PORTS:-${POUDRIERE_DIR}/ports/default}"

readonly command="${1}"
query="${2}"
readonly build="${3:-none}"

export PORTSDIR # needed for portsearch

interrupted=0 # build interrupted by ctrl+c

check_portname() {
	if [ "${1}" = "." ]; then
		port="$(echo ${PWD} | awk '{
			n = split($0, p ,"/");
			print p[n-1] "/" p[n];
		}')"
	else
		port="${1}"
	fi

	if [ ! -d "${POUDRIERE_PORTS}/${port}" ]; then
		printf "${POUDRIERE_PORTS}/${port}: port directory does not exists\n\n" >&2
		display_usage
	fi

	echo ${port}
}

display_usage() {
	<< EOF >&2 cat
Usage: ${0##*/} <command> <query> [jail_name] [poudriere testport args]

 command: bdeps - build ports having certain build dependency
          file  - build ports read from file
          grep  - build ports containing phrase in Makefile
          ldeps - build ports linking with certain library
          match - build ports with name matching certain phrase
          name  - build specific port

 query: (bdeps|match) - portname
        (file) - name of file to read category/port entries from
        (grep) - grep pattern
        (ldeps|name) - category/port or '.' for port from current directory

 jail_name: poudriere jail name or 'all' for all available jails

EOF
	exit 1
}

poudriere_jails() {
	poudriere jail -lq | cut -d" " -f1
}

poudriere_test_build() {
	local jname="${1}" port="${2%%:*}" option="${2##*:}"
	local port_cfg="" outcome="success"

	if [ "${port}" != "${option}" ]; then
		if [ "${option}" != "OPT_UNKNOWN"  ]; then
			echo "*** port ${port} needs ${option} to be set ***"
		else
			echo "*** port ${port} unknown option needed ***"
		fi
		port_cfg="-c"
	fi

	${SUDO} poudriere testport -j ${jname} -o ${port} ${poudriere_args} ${port_cfg}
	[ ${?} -eq 0 ] || outcome="failed"
	[ ${interrupted} -eq 0 ] || outcome="interrupted"
	BUILD_RESULTS="${BUILD_RESULTS} ${port}:${jname}:${outcome}"
}

[ -z "${query}" ] && display_usage

if [ "${build}" != "none" -a "${build}" != "all" \
	-a -z "$(poudriere_jails | grep ${build})" ]
then
	printf "${build}: no such poudriere jail\n\n" >&2
	display_usage
fi

if [ -n "${4}" ]; then
	shift 3;
	poudriere_args="${*}";
fi

if [ ! -d "${POUDRIERE_PORTS}" ]; then
	echo "Ports directory not found: ${POUDRIERE_PORTS}, try setting POUDRIERE_PORTS variable" >&2
	exit 1
fi

if [ $(id -u) -ne 0 ]; then
	which sudo >/dev/null
	if [ ${?} -eq 1 ]; then
		echo "===> sudo not found" >&2
		exit 1
	fi
	SUDO="sudo"
fi

trap 'interrupted=1' int

case ${command} in
bdeps)
	ports="$(portsearch -b ${query} | grep Path: | cut -f 4- -d '/')" ;;
file)
	if [ ! -f "${query}" ]; then
		echo "File ${query} does not exists" >&2
		exit 1
	fi
	ports="$(cat "${query}" | grep -v '^#')" ;;
grep)
	ports="$(cd ${POUDRIERE_PORTS} && find . -name "Makefile*" -exec \
		grep -q "${query}" {} \; -print | grep -v "${query}/Makefile" \
		| sed -E 's;(\./|/Makefile);;g')" ;;
ldeps)
	query=$(check_portname ${query})
	tmp="$(cd ${POUDRIERE_PORTS} && find . -name "Makefile*" -exec grep -q \
		"^[^#].*${query}[ \\]*\$" {} \; -print | sed 's|\./||')"

	for path in ${tmp}; do
		path="$(dirname ${path})"
		[ "${query}" != "${path}" ] || continue
		cd ${POUDRIERE_PORTS}/${path}
		if [ -n "$(make -V BUILD_DEPENDS -V LIB_DEPENDS | grep ${query})" ]; then
			ports="${ports} ${path}"
			continue
		fi
		[ -z "$(make -V RUN_DEPENDS | grep ${query})" ] || continue

		for option in $(make pretty-print-config); do
			[ -n "$(echo ${option} | grep ^-)" ] || continue

			if [ -n "$(make -V BUILD_DEPENDS -V LIB_DEPENDS \
				OPTIONS_DEFAULT=${option#-} | grep ${query})" ]
			then
				ports="${ports} ${path}:${option#-}"
				continue 2
			fi

			[ -z "$(make -V FETCH_DEPENDS -V EXTRACT_DEPENDS \
				-V PATCH_DEPENDS -V RUN_DEPENDS -V TEST_DEPENDS \
				OPTIONS_DEFAULT=${option#-} | grep ${query})" ] \
				|| continue 2
		done
		
		ports="${ports} ${path}:OPT_UNKNOWN"
	done
	;;	
match)
	ports="$(portsearch -n ${query} | grep Path: | cut -f 4- -d '/')" ;;
name)
	ports=$(check_portname ${query}) ;;
*)
	display_usage
esac

for port in ${ports}; do
	case ${build} in
	none)
		if [ "${command}" != "name" ]; then
			case ${port##*:} in
			"${port}")
				echo "Found match: ${port%%:*}" ;;
			"OPT_UNKNOWN")
				echo "Found match: ${port%%:*}, unknown option needed" ;;
			*)
				echo "Found match: ${port%%:*}, needs ${port##*:}=on" ;;
			esac
		fi
		;;
	all)
		for b in $(poudriere_jails | sort -h); do 
			poudriere_test_build ${b} ${port}
			[ ${interrupted} -eq 0 ] || break 2
		done ;;
	*)
		poudriere_test_build ${build} ${port}
		[ ${interrupted} -eq 0 ] || break
	esac
done

if [ -n "${BUILD_RESULTS}" ]; then
	printf "\n===> Following build(s) were performed:\n"
	printf "%-40s %-15s %s\n" "PORTNAME" "JAIL" "RESULT"

	for result in ${BUILD_RESULTS}; do
		printf "%-40s %-15s %s\n" "${result%%:*}" \
			"$(echo ${result} | awk -F: '{ print $2 }')" \
			"${result##*:}"
	done
	echo ""
fi

