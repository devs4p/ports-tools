#!/bin/sh

readonly PORTSDIR=${PORTSDIR:-/usr/ports}
readonly PATH=$PATH:$PORTSDIR/Tools/scripts
readonly TBDIR=${TBDIR:-/usr/local/tinderbox}
readonly TBUSER=${TBUSER:-corn}
readonly build=${3:-none}

# $1 tinderbox buildname, $2 port to build
build_queue_add() {
	local ptree="$TBDIR/portstrees/$(tc_cmd getPortsTreeForBuild -b $1)/ports"

	if [ ! -d "$ptree/$2" ]; then
		echo "$1: $2 does not exists"
		return	
	fi
	
	echo "Adding $2 to $1 build queue"
	tc_cmd addBuildPortsQueueEntry -u $TBUSER -b $1 -d $2
}

display_usage() {
	echo "Usage: tbuilder <command> <query> [build_name]"
	echo ""
	echo " command: bdeps - build ports having certain build dependency"
	echo "          grep  - build ports containing phrase in Makefile"
	echo "          match - build ports with name matching certain phrase"
	echo "          name  - build specific port"
	echo ""
	echo " query: (bdeps|name) - portname"
	echo "        (grep) - grep pattern"
	echo "        (name) - category/port or '.' to build port from current directory"
	echo ""
	echo " build_name: tinderbox build name or 'all' for all available builds"
	echo ""
	exit
}

tc_cmd() {
	local tc_script
	
	if [ "$(id -u)" = "0" ]; then
		tc_script="./tc"
	else
		tc_script="sudo ./tc"
	fi

	cd $TBDIR/scripts && $tc_script $*
}

[ -z "$2" ] && display_usage

case $1 in
bdeps)
	ports=$(portsearch -b $2 | grep Path: | cut -f 4- -d '/') ;;
grep)
	ports=$(cd $PORTSDIR && find . -name "Makefile*" -exec grep -q "$2" {} \; \
		-print | grep -v "$2/Makefile" | sed -E 's;(\./|/Makefile);;g') ;;
match)
	ports=$(portsearch -n $2 | grep Path: | cut -f 4- -d '/') ;;
name)
	ports=$2
	[ "$ports" = "." ] && ports=$(echo $PWD | \
		awk '{ n = split($0, p ,"/"); print p[n-1] "/" p[n]; }')
	;;
*)
	display_usage
esac

for port in $ports; do
	case $build in
	none)
		[ "$1" != "name" ] && echo "Found match: $port" ;;
	all)
		for b in $(tc_cmd listBuilds); do build_queue_add $b $port; done ;;
	*)
		build_queue_add $build $port
	esac
done
