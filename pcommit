#!/bin/sh

readonly PAGER=${PAGER:-less}
readonly PORTSDIR=${PORTSDIR:-/usr/ports}
readonly PATH=$PATH:$PORTSDIR/Tools/scripts

non_interactive=0

display_usage() {
	echo "Usage: pcommit [-h|-n]"
	echo ""
	echo "    -h - show this help"
	echo "    -n - non-interactive mode"
	echo ""
	exit
}

remove_dir_if_empty() {
	local dir=$(dirname $1)
	[ -d $dir ] || return 
	
	if [ -z "$(ls $dir 2>&1)" ]; then
		svn rm $dir
	else
		svn rm $1
	fi
}

while getopts "hn" option; do
	case $option in
	n)
		non_interactive=1 ;;
	*)
		display_usage
	esac
done

if [ -n "$(make -V PORTNAME)" ]; then
	depth=2
else 
	if [ -n "$(make -V PORTSTOP)" ]; then
		depth=4
		clean_exp="-and -not -path './.svn/*'"
	else
		depth=3
	fi
fi

wrk_dirs=$(find . -name work -type d -depth $((depth-1)) | sed 's|^./||g')
if [ -n "$wrk_dirs" ]; then
	for wdir in $wrk_dirs; do
		if [ $depth -ne 2 ]; then
			echo "===> Running 'make clean' in ${wdir%%/work}"
			make_args="-C \"${wdir%%/work}\""
		else
			echo "===> Running 'make clean'"
			make_args=""
		fi

		ret=$(make $make_args clean 2>/dev/null)
		if [ -n "$(echo $ret | grep 'not writable')" ]; then
			if [ $depth -ne 2 ]; then
				echo "===> Failed to 'make clean' in ${wdir%%/work}"
			else
				echo "===> Failed to 'make clean'"
			fi
			exit 0
		fi
	done
fi

rej_files=$(find . -name "*.rej" -depth $depth | sed 's|^./||g')
if [ -n "$rej_files" ]; then
	printf "===> Found rejected patch files, bailing\n "
	echo $rej_files | tr ' ' '\n'
	exit 0
fi

old_files=$(find . \( -name "*.orig" -or -size 0 \) $clean_exp -delete \
		-print -depth $depth | sed 's|^./||g')
if [ -n "$old_files" ]; then
	printf "===> Removed old temporary files\n"
	echo $old_files | tr ' ' '\n'
	echo ""
fi

svn status | while read line; do
	change=$(echo "$line" | awk '{ print $1 }')
	file=$(echo "$line" | awk '{ print $2 }')

	case $change in
	!)
		case $file in
		*files/*)
			remove_dir_if_empty $file ;;
		*scripts/*)
			remove_dir_if_empty $file ;;
		*)
			svn rm "$file"
		esac 
		;;
	?)
		case $file in *svn-commit*) continue ;; esac
		svn add "$file"
	esac
done

if [ $non_interactive -eq 1 ]; then
	psvn commit
	exit
fi

while true; do
	echo ""
	echo "[c]ommit [v]iew diff [s]vn status [q]uit"
	echo -n "> "
	read cmd
	
	case $cmd in
	c)
		psvn commit
		exit ;;
	q)
		exit ;;
	s)
		svn status ;;
	v)
		svn diff | $PAGER ;;
	*)
		echo "No such command: $cmd"
	esac
done
